# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5.3.0
      with:
        python-version: "3.11"

    - name: Install Poetry
      uses: snok/install-poetry@v1.3.3
      with:
        version: latest

    - name: Install dependencies
      run: |
        poetry install --no-root

#    - name: Cache Poetry
#      uses: actions/cache@v3
#      with:
#        path: ~/.local/bin
#        key: ${{ runner.os }}-poetry

#    - name: Cache virtual environment
#      id: cached-poetry-dependencies
#      uses: actions/cache@v3
#      with:
#        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
#        key: ${{ runner.os }}-venv

  lint:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install Poetry
      uses: snok/install-poetry@v1.3.3

    - name: Install dependencies
      run: |
        poetry install --no-root

#    - name: Restore cached Poetry
#      uses: actions/cache@v3
#      with:
#        path: ~/.local/bin
#        key: ${{ runner.os }}-poetry

#    - name: Restore cached venv
#      uses: actions/cache@v3
#      with:
#        path: ./example-app/.venv
#        key: ${{ runner.os }}-venv


    - name: Lint
      run: |
        poetry run task lint

  formatter:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3

      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Formatter
        run: |
          poetry run task formatter

  security:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3

      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Security
        run: |
          poetry run task security