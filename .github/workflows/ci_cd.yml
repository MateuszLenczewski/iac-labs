name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Cache Poetry Dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Add Poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Project Dependencies
        run: poetry install --no-root

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    needs: install-dependencies
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Linter
        run: poetry run task lint

      - name: Run Formatter
        run: poetry run task formatter

      - name: Run Security Checks
        run: poetry run task security

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: install-dependencies
    defaults:
      run:
        working-directory: ./example-app
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Unit Tests
        run: poetry run task test

  build:
    name: Build Pipeline
    runs-on: ubuntu-latest
    needs:
      - static-analysis
      - unit-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Final Build Task
        run: echo "Build pipeline complete"